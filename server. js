const axios = require("axios");
const cron = require("node-cron");
require("dotenv").config();

const CLICKBANK_API_KEY = process.env.CLICKBANK_API_KEY;
const META_ACCESS_TOKEN = process.env.META_ACCESS_TOKEN;

// Example: Fetch sales from ClickBank
async function fetchClickBankSales() {
  try {
    const response = await axios.get("https://api.clickbank.com/rest/1.3/sales", {
      headers: {
        Authorization: `Bearer ${CLICKBANK_API_KEY}`
      }
    });

    console.log("Sales data:", response.data);
    return response.data;
  } catch (error) {
    console.error("Error fetching ClickBank sales:", error.response ? error.response.data : error.message);
    return null;
  }
}

// Example: Send data to Meta
async function sendToMeta(data) {
  try {
    const url = `https://graph.facebook.com/v18.0/YOUR_PIXEL_ID/events?access_token=${META_ACCESS_TOKEN}`;

    const payload = {
      data: [
        {
          event_name: "Purchase",
          event_time: Math.floor(Date.now() / 1000),
          custom_data: data
        }
      ]
    };

    const res = await axios.post(url, payload);
    console.log("Sent to Meta:", res.data);
  } catch (error) {
    console.error("Error sending to Meta:", error.response ? error.response.data : error.message);
  }
}

// Schedule: every hour
cron.schedule("0 * * * *", async () => {
  console.log("Fetching sales...");
  const salesData = await fetchClickBankSales();
  if (salesData) {
    console.log("Sending sales to Meta...");
    await sendToMeta(salesData);
  }
});

console.log("Service started. Waiting for cron jobs...");
